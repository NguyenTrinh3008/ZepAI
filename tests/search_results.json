{
  "timestamp": "2025-10-08T04:12:12.932115Z",
  "project_id": "full_integration_test",
  "conversations_count": 6,
  "conversations": [
    {
      "request_id": "req_refactor_async_001",
      "name": "Async/Await Refactoring",
      "uuid": "4f35039c-56c7-4da0-b5d6-ac757ba11e37"
    },
    {
      "request_id": "req_bug_keyerror_001",
      "name": "KeyError Bug Fix",
      "uuid": "09c537d0-24c9-4ba3-b9f0-4e0e409a91ab"
    },
    {
      "request_id": "req_feature_upload_001",
      "name": "Profile Picture Upload",
      "uuid": "cabe9e63-52d5-42d5-a576-f3c283fbea2a"
    },
    {
      "request_id": "req_review_payment_001",
      "name": "Payment Code Review",
      "uuid": "86d1d644-21ef-4392-851b-ce8cdad23a51"
    },
    {
      "request_id": "req_perf_dashboard_001",
      "name": "Dashboard Performance Fix",
      "uuid": "679f5b93-57be-44df-8906-c5561f87bf45"
    },
    {
      "request_id": "req_docs_api_001",
      "name": "API Documentation Generation",
      "uuid": "10b7674b-b494-4f31-beaf-63248c405461"
    }
  ],
  "search_tests": [
    {
      "test_name": "Async Refactoring Query",
      "query": "async await performance refactoring database",
      "expected_request_id": "req_refactor_async_001",
      "expected_keywords": [
        "async",
        "await",
        "refactor",
        "performance"
      ],
      "status": "PASS",
      "accuracy": 75.0,
      "keywords_found": 3,
      "keywords_total": 4,
      "results_count": 5,
      "top_3_results": [
        {
          "rank": 1,
          "name": "WAS_CONVERTED_TO",
          "summary": "Converted get_user_data() to async/await",
          "text": "Converted get_user_data() to async/await",
          "score": 0.0,
          "id": "72a98f51-1147-44fe-9dbe-2f9d66f23471"
        },
        {
          "rank": 2,
          "name": "ADDED_INDEX",
          "summary": "Added indexes on (project_id, created_at) in database/queries.py.",
          "text": "Added indexes on (project_id, created_at) in database/queries.py.",
          "score": 0.0,
          "id": "3c05a96b-6fc7-468e-92de-2c817de4cc1b"
        },
        {
          "rank": 3,
          "name": "IMPROVED_PERFORMANCE",
          "summary": "System performance improved from 9.5s to 350ms for Dashboard (96% faster); with cache: 45ms and can handle 10x traffic.",
          "text": "System performance improved from 9.5s to 350ms for Dashboard (96% faster); with cache: 45ms and can handle 10x traffic.",
          "score": 0.0,
          "id": "90c780bc-5023-4c03-95bf-0cfec68b7c05"
        }
      ],
      "all_results": [
        {
          "name": "WAS_CONVERTED_TO",
          "summary": "Converted get_user_data() to async/await",
          "score": 0.0
        },
        {
          "name": "ADDED_INDEX",
          "summary": "Added indexes on (project_id, created_at) in database/queries.py.",
          "score": 0.0
        },
        {
          "name": "IMPROVED_PERFORMANCE",
          "summary": "System performance improved from 9.5s to 350ms for Dashboard (96% faster); with cache: 45ms and can ",
          "score": 0.0
        },
        {
          "name": "REDUCED_QUERIES_USING",
          "summary": "Fixed the N+1 query problem using prefetch_related() to reduce queries from 301 to 4.",
          "score": 0.0
        },
        {
          "name": "QUERIES_TRIGGER_TASKS",
          "summary": "Each project triggered separate queries for tasks.",
          "score": 0.0
        }
      ]
    },
    {
      "test_name": "Bug Investigation Query",
      "query": "keyerror bug user preferences profile error",
      "expected_request_id": "req_bug_keyerror_001",
      "expected_keywords": [
        "bug",
        "keyerror",
        "user",
        "error"
      ],
      "status": "PASS",
      "accuracy": 75.0,
      "keywords_found": 3,
      "keywords_total": 4,
      "results_count": 8,
      "top_3_results": [
        {
          "rank": 1,
          "name": "RAISING_ERROR_AT",
          "summary": "KeyError: 'user_preferences' in production at api/profile.py line 67",
          "text": "KeyError: 'user_preferences' in production at api/profile.py line 67",
          "score": 0.0,
          "id": "e637f638-83c9-43eb-ac51-91ccd681c641"
        },
        {
          "rank": 2,
          "name": "FOUND_COUNT_OF",
          "summary": "Found 847 users without preferences (12% of user base)",
          "text": "Found 847 users without preferences (12% of user base)",
          "score": 0.0,
          "id": "4de39538-3774-481a-988f-f5bad200c581"
        },
        {
          "rank": 3,
          "name": "RAISED_WARNING",
          "summary": "payment/processor.py has warning: Error messages too detailed",
          "text": "payment/processor.py has warning: Error messages too detailed",
          "score": 0.0,
          "id": "d96b3412-1f03-4e7b-aeb4-7c7b34984a09"
        }
      ],
      "all_results": [
        {
          "name": "RAISING_ERROR_AT",
          "summary": "KeyError: 'user_preferences' in production at api/profile.py line 67",
          "score": 0.0
        },
        {
          "name": "FOUND_COUNT_OF",
          "summary": "Found 847 users without preferences (12% of user base)",
          "score": 0.0
        },
        {
          "name": "RAISED_WARNING",
          "summary": "payment/processor.py has warning: Error messages too detailed",
          "score": 0.0
        },
        {
          "name": "MISSING_FOR",
          "summary": "New users don't have user_preferences key",
          "score": 0.0
        },
        {
          "name": "STORES_IN",
          "summary": "Endpoint stores uploaded profile pictures in S3.",
          "score": 0.0
        },
        {
          "name": "IS_DEFINED_IN",
          "summary": "get_user_data() (implied) is in database/users.py",
          "score": 0.0
        },
        {
          "name": "HAS_TESTS",
          "summary": "Tests added for POST /api/users/{user_id}/profile-picture endpoint.",
          "score": 0.0
        },
        {
          "name": "SPECIFIES_ERROR_RESPONSES",
          "summary": "OpenAPI 3.0 specification includes error responses (200, 400, 401, 403, 500)",
          "score": 0.0
        }
      ]
    },
    {
      "test_name": "Upload Feature Query",
      "query": "upload profile picture image s3 validation",
      "expected_request_id": "req_feature_upload_001",
      "expected_keywords": [
        "upload",
        "profile",
        "s3",
        "validation"
      ],
      "status": "PASS",
      "accuracy": 100.0,
      "keywords_found": 4,
      "keywords_total": 4,
      "results_count": 4,
      "top_3_results": [
        {
          "rank": 1,
          "name": "USES_SERVICE",
          "summary": "POST /api/users/{user_id}/profile-picture endpoint uses services/storage.py for S3 upload.",
          "text": "POST /api/users/{user_id}/profile-picture endpoint uses services/storage.py for S3 upload.",
          "score": 0.0,
          "id": "0579f0e1-84d8-4033-8dd7-971fc4563be2"
        },
        {
          "rank": 2,
          "name": "VALIDATES_FILE_TYPE",
          "summary": "file validation middleware validates file type jpg.",
          "text": "file validation middleware validates file type jpg.",
          "score": 0.0,
          "id": "5f40a214-556b-4d6f-897d-992533402856"
        },
        {
          "rank": 3,
          "name": "HAS_TESTS",
          "summary": "Tests added for POST /api/users/{user_id}/profile-picture endpoint.",
          "text": "Tests added for POST /api/users/{user_id}/profile-picture endpoint.",
          "score": 0.0,
          "id": "9c298d14-6149-463c-865f-f8b7d14bbc3d"
        }
      ],
      "all_results": [
        {
          "name": "USES_SERVICE",
          "summary": "POST /api/users/{user_id}/profile-picture endpoint uses services/storage.py for S3 upload.",
          "score": 0.0
        },
        {
          "name": "VALIDATES_FILE_TYPE",
          "summary": "file validation middleware validates file type jpg.",
          "score": 0.0
        },
        {
          "name": "HAS_TESTS",
          "summary": "Tests added for POST /api/users/{user_id}/profile-picture endpoint.",
          "score": 0.0
        },
        {
          "name": "PERFORMS",
          "summary": "image processing resizes images to 512x512.",
          "score": 0.0
        }
      ]
    },
    {
      "test_name": "Security Review Query",
      "query": "security payment review critical api key",
      "expected_request_id": "req_review_payment_001",
      "expected_keywords": [
        "security",
        "payment",
        "review",
        "critical"
      ],
      "status": "PARTIAL",
      "accuracy": 50.0,
      "keywords_found": 2,
      "keywords_total": 4,
      "results_count": 5,
      "top_3_results": [
        {
          "rank": 1,
          "name": "CONTAINS_SECURITY_ISSUE",
          "summary": "payment/processor.py contains API Key Exposure (hardcoded Stripe key)",
          "text": "payment/processor.py contains API Key Exposure (hardcoded Stripe key)",
          "score": 0.0,
          "id": "d96b3412-1f03-4e7b-aeb4-7c7b34984a09"
        },
        {
          "rank": 2,
          "name": "EXPOSES_SERVICE_CREDENTIALS",
          "summary": "API Key Exposure (hardcoded Stripe key) exposes Stripe",
          "text": "API Key Exposure (hardcoded Stripe key) exposes Stripe",
          "score": 0.0,
          "id": "09c537d0-24c9-4ba3-b9f0-4e0e409a91ab"
        },
        {
          "rank": 3,
          "name": "REQUIRES_CONCEPT",
          "summary": "No Idempotency Key (duplicate charges possible) indicates missing idempotency key",
          "text": "No Idempotency Key (duplicate charges possible) indicates missing idempotency key",
          "score": 0.0,
          "id": "3153a3fe-9ef0-4f69-9f07-5b06d4c053ee"
        }
      ],
      "all_results": [
        {
          "name": "CONTAINS_SECURITY_ISSUE",
          "summary": "payment/processor.py contains API Key Exposure (hardcoded Stripe key)",
          "score": 0.0
        },
        {
          "name": "EXPOSES_SERVICE_CREDENTIALS",
          "summary": "API Key Exposure (hardcoded Stripe key) exposes Stripe",
          "score": 0.0
        },
        {
          "name": "REQUIRES_CONCEPT",
          "summary": "No Idempotency Key (duplicate charges possible) indicates missing idempotency key",
          "score": 0.0
        },
        {
          "name": "MISSING_FOR",
          "summary": "New users don't have user_preferences key",
          "score": 0.0
        },
        {
          "name": "SPECIFIES_AUTH_REQUIREMENTS",
          "summary": "OpenAPI 3.0 specification includes authentication requirements",
          "score": 0.0
        }
      ]
    },
    {
      "test_name": "Performance Query",
      "query": "slow dashboard n+1 query optimization cache",
      "expected_request_id": "req_perf_dashboard_001",
      "expected_keywords": [
        "performance",
        "dashboard",
        "query",
        "cache"
      ],
      "status": "PARTIAL",
      "accuracy": 50.0,
      "keywords_found": 2,
      "keywords_total": 4,
      "results_count": 6,
      "top_3_results": [
        {
          "rank": 1,
          "name": "SUFFERED_N_PLUS_ONE_QUERY_PROBLEM",
          "summary": "Dashboard had an N+1 query problem (100 projects each triggered separate queries for team members, activity, tasks resulting in 301 total queries).",
          "text": "Dashboard had an N+1 query problem (100 projects each triggered separate queries for team members, activity, tasks resulting in 301 total queries).",
          "score": 0.0,
          "id": "90c780bc-5023-4c03-95bf-0cfec68b7c05"
        },
        {
          "rank": 2,
          "name": "REDUCED_QUERIES_USING",
          "summary": "Fixed the N+1 query problem using select_related() to reduce queries from 301 to 4.",
          "text": "Fixed the N+1 query problem using select_related() to reduce queries from 301 to 4.",
          "score": 0.0,
          "id": "14d00e86-b20e-474b-adc5-50d162fe1f6c"
        },
        {
          "rank": 3,
          "name": "FILE_RELEVANCE",
          "summary": "database/queries.py is a context file related to the Dashboard.",
          "text": "database/queries.py is a context file related to the Dashboard.",
          "score": 0.0,
          "id": "3c05a96b-6fc7-468e-92de-2c817de4cc1b"
        }
      ],
      "all_results": [
        {
          "name": "SUFFERED_N_PLUS_ONE_QUERY_PROBLEM",
          "summary": "Dashboard had an N+1 query problem (100 projects each triggered separate queries for team members, a",
          "score": 0.0
        },
        {
          "name": "REDUCED_QUERIES_USING",
          "summary": "Fixed the N+1 query problem using select_related() to reduce queries from 301 to 4.",
          "score": 0.0
        },
        {
          "name": "FILE_RELEVANCE",
          "summary": "database/queries.py is a context file related to the Dashboard.",
          "score": 0.0
        },
        {
          "name": "EXPERIENCES_PERFORMANCE_ISSUE",
          "summary": "The /api/dashboard endpoint takes 8-12 seconds to load and Users are complaining.",
          "score": 0.0
        },
        {
          "name": "FILE_RELEVANCE",
          "summary": "api/dashboard.py is a context file related to the Dashboard.",
          "score": 0.0
        },
        {
          "name": "QUERIES_TRIGGER_ACTIVITY",
          "summary": "Each project triggered separate queries for activity.",
          "score": 0.0
        }
      ]
    },
    {
      "test_name": "Documentation Query",
      "query": "api documentation openapi auth endpoints",
      "expected_request_id": "req_docs_api_001",
      "expected_keywords": [
        "api",
        "documentation",
        "openapi",
        "auth"
      ],
      "status": "PASS",
      "accuracy": 75.0,
      "keywords_found": 3,
      "keywords_total": 4,
      "results_count": 6,
      "top_3_results": [
        {
          "rank": 1,
          "name": "GENERATED_OPENAPI_SPEC_FOR",
          "summary": "Generated OpenAPI 3.0 specification for api/auth.py",
          "text": "Generated OpenAPI 3.0 specification for api/auth.py",
          "score": 0.0,
          "id": "877610cb-ade2-4f6d-9188-cdeb82365679"
        },
        {
          "rank": 2,
          "name": "SPECIFIES_AUTH_REQUIREMENTS",
          "summary": "OpenAPI 3.0 specification includes authentication requirements",
          "text": "OpenAPI 3.0 specification includes authentication requirements",
          "score": 0.0,
          "id": "8a982802-950b-43c5-bcd0-964e114899a8"
        },
        {
          "rank": 3,
          "name": "EXPOSES_SERVICE_CREDENTIALS",
          "summary": "API Key Exposure (hardcoded Stripe key) exposes Stripe",
          "text": "API Key Exposure (hardcoded Stripe key) exposes Stripe",
          "score": 0.0,
          "id": "09c537d0-24c9-4ba3-b9f0-4e0e409a91ab"
        }
      ],
      "all_results": [
        {
          "name": "GENERATED_OPENAPI_SPEC_FOR",
          "summary": "Generated OpenAPI 3.0 specification for api/auth.py",
          "score": 0.0
        },
        {
          "name": "SPECIFIES_AUTH_REQUIREMENTS",
          "summary": "OpenAPI 3.0 specification includes authentication requirements",
          "score": 0.0
        },
        {
          "name": "EXPOSES_SERVICE_CREDENTIALS",
          "summary": "API Key Exposure (hardcoded Stripe key) exposes Stripe",
          "score": 0.0
        },
        {
          "name": "CALLER_UPDATED_IN",
          "summary": "Updated 3 callers (including callers in api/users.py)",
          "score": 0.0
        },
        {
          "name": "RAISING_ERROR_AT",
          "summary": "KeyError: 'user_preferences' in production at api/profile.py line 67",
          "score": 0.0
        },
        {
          "name": "CONTAINS_SECURITY_ISSUE",
          "summary": "payment/processor.py contains API Key Exposure (hardcoded Stripe key)",
          "score": 0.0
        }
      ]
    },
    {
      "test_name": "Cross-Topic: Performance (Vague)",
      "query": "system is slow taking too long",
      "expected_request_id": "req_perf_dashboard_001",
      "expected_keywords": [
        "slow",
        "performance",
        "optimization"
      ],
      "status": "FAIL",
      "accuracy": 33.3,
      "keywords_found": 1,
      "keywords_total": 3,
      "results_count": 5,
      "top_3_results": [
        {
          "rank": 1,
          "name": "RAISED_WARNING",
          "summary": "payment/processor.py has warning: Error messages too detailed",
          "text": "payment/processor.py has warning: Error messages too detailed",
          "score": 0.0,
          "id": "d96b3412-1f03-4e7b-aeb4-7c7b34984a09"
        },
        {
          "rank": 2,
          "name": "EXPERIENCES_PERFORMANCE_ISSUE",
          "summary": "The /api/dashboard endpoint takes 8-12 seconds to load and Users are complaining.",
          "text": "The /api/dashboard endpoint takes 8-12 seconds to load and Users are complaining.",
          "score": 0.0,
          "id": "8b2e6047-fbce-4d18-819b-76cec418d7ac"
        },
        {
          "rank": 3,
          "name": "IMPROVED_PERFORMANCE",
          "summary": "System performance improved from 9.5s to 350ms for Dashboard (96% faster); with cache: 45ms and can handle 10x traffic.",
          "text": "System performance improved from 9.5s to 350ms for Dashboard (96% faster); with cache: 45ms and can handle 10x traffic.",
          "score": 0.0,
          "id": "90c780bc-5023-4c03-95bf-0cfec68b7c05"
        }
      ],
      "all_results": [
        {
          "name": "RAISED_WARNING",
          "summary": "payment/processor.py has warning: Error messages too detailed",
          "score": 0.0
        },
        {
          "name": "EXPERIENCES_PERFORMANCE_ISSUE",
          "summary": "The /api/dashboard endpoint takes 8-12 seconds to load and Users are complaining.",
          "score": 0.0
        },
        {
          "name": "IMPROVED_PERFORMANCE",
          "summary": "System performance improved from 9.5s to 350ms for Dashboard (96% faster); with cache: 45ms and can ",
          "score": 0.0
        },
        {
          "name": "IS_DEFINED_IN",
          "summary": "get_user_data() (implied) is in database/users.py",
          "score": 0.0
        },
        {
          "name": "FILE_RELEVANCE",
          "summary": "database/queries.py is a context file related to the Dashboard.",
          "score": 0.0
        }
      ]
    },
    {
      "test_name": "Cross-Topic: Error Handling",
      "query": "users getting errors unexpected failures",
      "expected_request_id": "req_bug_keyerror_001",
      "expected_keywords": [
        "error",
        "bug",
        "user"
      ],
      "status": "PASS",
      "accuracy": 66.7,
      "keywords_found": 2,
      "keywords_total": 3,
      "results_count": 9,
      "top_3_results": [
        {
          "rank": 1,
          "name": "MISSING_FOR",
          "summary": "New users don't have user_preferences key",
          "text": "New users don't have user_preferences key",
          "score": 0.0,
          "id": "a853c678-9611-4c80-994b-a8e6529ae5ad"
        },
        {
          "rank": 2,
          "name": "SPECIFIES_ERROR_RESPONSES",
          "summary": "OpenAPI 3.0 specification includes error responses (200, 400, 401, 403, 500)",
          "text": "OpenAPI 3.0 specification includes error responses (200, 400, 401, 403, 500)",
          "score": 0.0,
          "id": "8a982802-950b-43c5-bcd0-964e114899a8"
        },
        {
          "rank": 3,
          "name": "FOUND_COUNT_OF",
          "summary": "Found 847 users without preferences (12% of user base)",
          "text": "Found 847 users without preferences (12% of user base)",
          "score": 0.0,
          "id": "4de39538-3774-481a-988f-f5bad200c581"
        }
      ],
      "all_results": [
        {
          "name": "MISSING_FOR",
          "summary": "New users don't have user_preferences key",
          "score": 0.0
        },
        {
          "name": "SPECIFIES_ERROR_RESPONSES",
          "summary": "OpenAPI 3.0 specification includes error responses (200, 400, 401, 403, 500)",
          "score": 0.0
        },
        {
          "name": "FOUND_COUNT_OF",
          "summary": "Found 847 users without preferences (12% of user base)",
          "score": 0.0
        },
        {
          "name": "RAISED_WARNING",
          "summary": "payment/processor.py has warning: Error messages too detailed",
          "score": 0.0
        },
        {
          "name": "EXPERIENCES_PERFORMANCE_ISSUE",
          "summary": "The /api/dashboard endpoint takes 8-12 seconds to load and Users are complaining.",
          "score": 0.0
        },
        {
          "name": "HAS_TESTS",
          "summary": "Tests added for POST /api/users/{user_id}/profile-picture endpoint.",
          "score": 0.0
        },
        {
          "name": "SUFFERED_N_PLUS_ONE_QUERY_PROBLEM",
          "summary": "Dashboard had an N+1 query problem (100 projects each triggered separate queries for team members, a",
          "score": 0.0
        },
        {
          "name": "CREATED_ENDPOINT",
          "summary": "Created POST /api/users/{user_id}/profile-picture endpoint for profile pictures upload.",
          "score": 0.0
        },
        {
          "name": "WAS_CONVERTED_TO",
          "summary": "Converted get_user_data() to async/await",
          "score": 0.0
        }
      ]
    }
  ]
}